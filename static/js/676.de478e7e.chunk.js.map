{"version":3,"file":"static/js/676.de478e7e.chunk.js","mappings":"2PACA,EAA+B,4B,SCqD/B,EAjDc,SAAC,GAAc,IAAbA,EAAY,EAAZA,QAChB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KA0BI,OAnBAC,EAAAA,EAAAA,YAAU,WAAK,wCACX,8GAG4BC,EAAAA,EAAAA,IAAcL,GAH1C,OAGcE,EAHd,OAIQC,EAASD,GAJjB,gDAOQI,MAAM,EAAD,IAPb,0DADW,uBAAC,WAAD,wBAWXC,KACD,CAACP,KAQA,iBAAKQ,UAAWC,EAAhB,UAG6B,OAAxBP,EAAMQ,eACP,gBAAKC,IAAI,iKAAiKC,IAAI,SAASC,OAAO,WAC9L,gBAAKF,IAAG,UA5BG,mCA4BH,OAAsBT,EAAMQ,eAAiBE,IAAI,MAGzD,6BACA,wBAAKV,EAAMY,SACX,oCAAYZ,EAAMa,iBAClB,wCACA,uBAAIb,EAAMc,YACV,qCACCd,EAAMe,QAAUf,EAAMe,OAAOC,KAAI,SAAAC,GAAI,OAAI,uBAAoBA,EAAKC,MAAjBD,EAAKC,gB,oBCPnE,EAlCa,SAAC,GAAU,IAATC,EAAQ,EAARA,GAEX,GAA4BpB,EAAAA,EAAAA,UAAS,IAArC,eAAOqB,EAAP,KAAeC,EAAf,KAiBA,OAbAnB,EAAAA,EAAAA,YAAU,WAAK,wCACX,8GAEgCoB,EAAAA,EAAAA,IAAiBH,GAFjD,OAEcI,EAFd,OAGQF,EAAUE,EAAUC,MAH5B,gDAMQpB,MAAM,EAAD,IANb,0DADW,uBAAC,WAAD,wBAUXC,KACD,CAACc,KAGA,wBACKC,EAAOJ,KAAI,SAAAS,GAAK,OACb,0BAC4B,OAAvBA,EAAMC,cACP,gBAAKjB,IAAKkB,EAAKjB,IAAI,GAAGC,OAAO,WAC7B,gBAAKF,IAAG,UArBD,mCAqBC,OAAsBgB,EAAMC,cAAgBhB,IAAI,GAAGC,OAAO,WAElE,uBAAIc,EAAMP,SALLO,EAAMP,YCoB/B,EA3CgB,SAAC,GAAU,IAATC,EAAQ,EAARA,GACd,GAA8BpB,EAAAA,EAAAA,UAAS,IAAvC,eAAO6B,EAAP,KAAgBC,EAAhB,KAkBA,OAhBA3B,EAAAA,EAAAA,YAAU,WAAK,wCACX,8GAEiC4B,EAAAA,EAAAA,IAAiBX,GAFlD,OAEcY,EAFd,OAGQF,EAAWE,EAAWC,SAH9B,gDAKQ5B,MAAM,EAAD,IALb,0DADW,uBAAC,WAAD,wBASXC,KACD,CAACc,KAOA,8BACDS,EAAQK,OAAS,GAChB,wBACGL,EAAQZ,KAAI,SAAAkB,GAAM,OACjB,2BACE,eAAG5B,UAAU,GAAb,WACE,oCAAgB,KAChB,iBAAMA,UAAU,GAAhB,SAAoB4B,EAAOC,aAE7B,eAAG7B,UAAU,GAAb,cAAkB4B,EAAOE,QAAzB,SALOF,EAAOf,UAUpB,cAAGb,UAAU,GAAb,yDCDR,EAhCsB,SAAC,GAAa,IAAZ+B,EAAW,EAAXA,MAEbC,GAAOC,EAAAA,EAAAA,iBAAPD,IACCE,EAAQH,EAARG,KACD1C,GAAW2C,EAAAA,EAAAA,aAAX3C,QAKX,OAFA4C,QAAQC,IAAI7C,IAGR,4BACI,mDACA,2BACI,yBAAI,SAAC,KAAD,CAAS8C,GAAI,CACrBC,SAAS,GAAD,OAAKP,EAAL,UADA,qBAEJ,yBAAI,SAAC,KAAD,CAASM,GAAI,CACrBC,SAAS,GAAD,OAAKP,EAAL,aADA,2BAIR,SAAC,EAAAQ,MAAD,CAAON,KAAI,UAAKA,EAAL,SAAX,UACI,SAAC,EAAD,CAAMrB,GAAIrB,OAEd,SAAC,EAAAgD,MAAD,CAAON,KAAI,UAAKA,EAAL,YAAX,UACI,SAAC,EAAD,CAASrB,GAAIrB,UCJzB,EApByB,WACzB,IAAOA,GAAW2C,EAAAA,EAAAA,aAAX3C,QAEDiD,GAAWC,EAAAA,EAAAA,eACXC,GAAUC,EAAAA,EAAAA,cACVb,GAAQE,EAAAA,EAAAA,iBAOV,OACI,iCACA,mBAAQY,KAAK,SAASC,QAPjB,WAAO,IAAD,IAEfH,EAAQI,KAAR,iBAAaN,QAAb,IAAaA,GAAb,UAAaA,EAAUO,aAAvB,aAAa,EAAiBC,YAA9B,QAAsC,MAKGjD,UAAU,GAA/C,oBACA,SAAC,EAAD,CAAOR,QAASA,KAChB,SAAC,EAAD,CAAeuC,MAAOA,S,yMCnBxBmB,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAA,wCAA2CF,IAD7D,cACCG,EADD,yBAGEA,EAASC,KAAK5B,SAHhB,kEAMA,SAAe7B,EAAtB,+CAAO,OAAP,oBAAO,WAA6B0D,GAA7B,uFACkBH,IAAAA,IAAA,mBAAsBG,EAAtB,oBAA0CL,EAA1C,uDADlB,cACCG,EADD,yBAGEA,EAASC,MAHX,kEAMA,SAAe9B,EAAtB,+CAAO,OAAP,oBAAO,WAAgC+B,GAAhC,uFACkBH,IAAAA,IAAA,mBAAsBG,EAAtB,4BAAkDL,EAAlD,2BADlB,cACCG,EADD,yBAGEA,EAASC,MAHX,kEAMA,SAAetC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCuC,GAAhC,uFACkBH,IAAAA,IAAA,mBAAsBG,EAAtB,4BAAkDL,EAAlD,oBADlB,cACCG,EADD,yBAGEA,EAASC,MAHX,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBL,IAAAA,IAAA,kCAAqCF,EAArC,iCAAqEO,EAArE,gCADlB,cACCJ,EADD,yBAEEA,EAASC,KAAK5B,SAFhB,kEA1BP0B,IAAAA,SAAAA,QAAyB,8B","sources":["webpack://react-homework-template/./src/components/Movie/movie.module.css?42df","components/Movie/Movie.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","components/AditionalInfo/AditionalInfo.jsx","components/views/MovieDetailsPage.jsx","services/api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieSection\":\"movie_movieSection__AX3db\",\"infoBlock\":\"movie_infoBlock__y-hIu\"};","import { useState, useEffect} from \"react\"\nimport {getMoviesCard} from \"../../services/api\"\nimport styled from \"./movie.module.css\"\n\n\nconst Movie = ({movieId}) =>{\nconst [movie, setMovie] = useState([])\n\n\n\nconst imgUrl1stpPart = \"https://image.tmdb.org/t/p/w500\"\n\n\n    useEffect(()=> {\n        async function fetchItems() {\n            try {\n                \n                const movie = await getMoviesCard(movieId)\n                setMovie(movie)\n          \n            } catch (error) {\n                alert(error)\n            }\n        }\n        fetchItems()\n    }, [movieId])\n\n  \n\n   \n    \n\n    return (\n        <div className={styled.movieSection}>\n             \n           \n            {movie.backdrop_path === null ?\n            <img src=\"https://media.istockphoto.com/vectors/no-image-available-sign-vector-id922962354?k=20&m=922962354&s=612x612&w=0&h=f-9tPXlFXtz9vg_-WonCXKCdBuPUevOBkp3DQ-i0xqo=\" alt=\"Poster\" height=\"400px\" /> :\n            <img src={`${imgUrl1stpPart}${movie.backdrop_path}`} alt=\"\" />\n            }\n            \n            <span>\n            <h2>{movie.title}</h2>\n            <p>Rating: {movie.vote_average}</p>\n            <h3> Overview </h3>\n            <p>{movie.overview}</p>\n            <h3> Genres </h3>\n            {movie.genres && movie.genres.map(genr => <p key={genr.name}>{genr.name}</p>)}\n            </span>\n            \n        </div>\n    )\n}\n\nexport default Movie;","import { useState, useEffect } from \"react\"\nimport {getMoviesCredits} from \"../../services/api\"\nimport img from \"../../img/noImg.jpg\"\n\n\n\nconst Cast = ({id}) => {\n\n    const [actors, setActors] = useState([])\n\n    const imgUrl1stpPart = \"https://image.tmdb.org/t/p/w500\"\n\n    useEffect(()=> {\n        async function fetchItems() {\n            try {\n                const getActors = await getMoviesCredits(id)\n                setActors(getActors.cast)\n                \n            } catch (error) {\n                alert(error)\n            }\n        }\n        fetchItems()\n    }, [id])\n\n    return(\n        <ul>\n            {actors.map(actor => \n                <li key={actor.name}>\n                    {actor.profile_path === null ?\n                    <img src={img} alt=\"\" height=\"100px\" /> :\n                    <img src={`${imgUrl1stpPart}${actor.profile_path}`} alt=\"\" height=\"100px\" />\n                    }\n                    <p>{actor.name}</p>\n                </li>\n                )}\n        </ul>\n    )\n}\n\nexport default Cast","import { useState, useEffect } from \"react\"\nimport {getMoviesReviews} from \"../../services/api\"\n\n\n\nconst Reviews = ({id}) => {\n    const [reviews, setReviews] = useState([])\n\n    useEffect(()=> {\n        async function fetchItems() {\n            try {\n                const getReviews = await getMoviesReviews(id)\n                setReviews(getReviews.results)\n            } catch (error) {\n                alert(error)\n            }\n        }\n        fetchItems()\n    }, [id])\n\n\n\n\n\n    return(\n        <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <p className=\"\">\n                <b>Author :</b>{' '}\n                <span className=\"\">{review.author}</span>\n              </p>\n              <p className=\"\">\"{review.content}\"</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className=\"\">\n          We don't have any reviews for this movie\n        </p>\n      )}\n    </>\n        \n    )\n}\n\nexport default Reviews\n\n","import { useParams } from \"react-router-dom\";\nimport { NavLink , Route, useRouteMatch} from \"react-router-dom\";\nimport Cast from \"../../components/Cast/Cast\";\nimport Reviews from \"../../components/Reviews/Reviews.jsx\"\n\n\nconst AditionalInfo = ({match}) => {\n\n    const {url} = useRouteMatch()\n    const { path} = match\n    const {movieId} = useParams()\n\n\nconsole.log(movieId)\n\nreturn (\n    <div>\n        <h3>Aditional Information</h3>\n        <ul>\n            <li><NavLink to={{\n        pathname: `${url}/cast`}}>Cast</NavLink></li>\n            <li><NavLink to={{\n        pathname: `${url}/reviews`}}>Reviews</NavLink></li>\n        </ul>\n        \n        <Route path={`${path}/cast`}>\n            <Cast id={movieId}/>\n        </Route>\n        <Route path={`${path}/reviews`}>\n            <Reviews id={movieId}/>\n        </Route>\n        \n    </div>\n    \n)\n\n}\n\nexport default AditionalInfo","import { useParams } from \"react-router-dom\"\nimport Movie from \"../Movie/Movie\"\nimport AditionalInfo from \"../AditionalInfo/AditionalInfo\"\nimport { useLocation, useHistory, useRouteMatch } from \"react-router-dom\"\n\nconst MovieDetailsPage = () => {\nconst {movieId} = useParams()\n\nconst location = useLocation()\nconst history = useHistory();\nconst match = useRouteMatch()\n    \nconst Back = () => {\n\n    history.push(location?.state?.from ?? '/'); \n  };\n\n    return (\n        <>\n        <button type=\"button\" onClick={Back} className=\"\"> BACK</button>\n        <Movie movieId={movieId} />\n        <AditionalInfo match={match}/>\n        </>\n    )\n}\nexport default MovieDetailsPage","import axios from \"axios\";\n\nconst API_KEY = \"56b8cf276f4b735c734fab5f0474134e\";\naxios.defaults.baseURL = \"https://api.themoviedb.org\";\n\nexport async function getMoviesTrending() {\n  const response = await axios.get(`/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n\nexport async function getMoviesCard(movie_id) {\n  const response = await axios.get(`/3/movie/${movie_id}?api_key=${API_KEY}&language=en-US&append_to_response=credits,reviews`\n  );\n  return response.data;\n}\n\nexport async function getMoviesReviews(movie_id) {\n  const response = await axios.get(`/3/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n}\n\nexport async function getMoviesCredits(movie_id) {\n  const response = await axios.get(`/3/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getMoviesBySearch(search) {\n  const response = await axios.get(`/3/search/movie?api_key=${API_KEY}&language=en-US&query=${search}&page=1&include_adult=false`);\n  return response.data.results;\n}\n"],"names":["movieId","useState","movie","setMovie","useEffect","getMoviesCard","alert","fetchItems","className","styled","backdrop_path","src","alt","height","title","vote_average","overview","genres","map","genr","name","id","actors","setActors","getMoviesCredits","getActors","cast","actor","profile_path","img","reviews","setReviews","getMoviesReviews","getReviews","results","length","review","author","content","match","url","useRouteMatch","path","useParams","console","log","to","pathname","Route","location","useLocation","history","useHistory","type","onClick","push","state","from","API_KEY","getMoviesTrending","axios","response","data","movie_id","getMoviesBySearch","search"],"sourceRoot":""}